@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Winky+Rough:ital,wght@0,300..900;1,300..900&display=swap');
@import "https://unpkg.com/open-props";
@import "https://unpkg.com/open-props/normalize.min.css";

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    color: white;
    font-weight: 600;
    font-family: poppins, Arial, Helvetica, sans-serif;
}

.body {
    background-image: url(assets/assets/bg.jpg);
    width: 100%;
    height: 100dvh;
    background-size: cover;
    background-position: center;
    display: flex;
    align-items: center;
    justify-content: center;

}

/* ::before is use dhere to make sure thta all elements dont ahve the blur effect on. if applied to .body then all elemtns wld be blured */
.body::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100dvh;
    background: rgb(0, 0, 0, 0.15);
    backdrop-filter: blur(15px);
}


.regular-text {
    font-weight: 400;
}


.mainContainer {
    width: 370px;
    height: 550px;
    z-index: 1;
    background: linear-gradient(to top, rgb(0, 0, 0, 0.15), rgb(255, 255, 255, 0.15));
    border-radius: 10px;
    backdrop-filter: blur(100px);
    padding: 20px;
    margin-bottom: 20px;
    position: relative;
    transition: width 1s ease;
}


.inputContainer {
    position: relative;
    margin-bottom: 25px;
}



.city-input {
    width: 100%;
    padding: 10px 40px 10px 16px;     /* Clockwise direction, hence extra padding on the right to accomodate the search icon */
    border-radius: 99px;
    border: 3px solid transparent;
    background: rgb(0, 0, 0, 0.15);
    outline: none;
    font-weight: 500;
    transition: 0.25s border;
}

.city-input::placeholder {
    color: rgb(255, 255, 255, 0.75);
}


.city-input:focus {
    border: 3px solid rgb(0, 0, 0, 0.15);
}


.search-btn {
    position: absolute;
    right: 16px;
    top: 50%; /* Moves the icon 50% down in comparison to its parents width */
    transform: translateY(-50%); /* Moves the icon 50% up based on its own height. It somehow works to be center of the search bar */
    background: none;
    border: none;
    display: flex;
    cursor: pointer;

}

.location {
    display: flex;
    align-items: center;
    gap: 6px;
}



.weather {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 25px; /* Gap is used to put a vertical space between each stacked element. its better than margins as its cleaner */
}

.weather-icon span {
    font-size: 48px;
}

.weather-details {
    display: flex;
    flex-direction: column;
    gap: 10px;
    font-size: 16px;
}

#cityName {
    font-size: 18px;
    margin-left: 6px;
}

.location {
    display: flex;
    align-items: center;
    flex-direction: column;
    gap: 10px;
}

.weather-widgets {
    display: grid;
    grid-template-columns: 1fr 1fr;     /* Uses a grid layout not flex-layout because flex layout is better for more dynamic content where the numbe rof items is unknown ect */
    gap: 15px;
    margin-top: 20px;
}

.widgets {
    display: flex;
    flex-direction: column;
    align-items: center;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    padding: 10px;
    backdrop-filter: blur(5px);
    font-size: 15px;
}



/* @media (min-width: 768px) {
    .mainContainer {
        width: 500px;
        padding: 30px;
    }

    .weather-icon span {
        font-size: 72px;
    }

    .weather-details {
        font-size: 20px;
    }

    .widgets {
        font-size: 17px;
        padding: 14px;
    }

    .city-input {
        font-size: 16px;
        padding: 12px 48px 12px 20px;
    }

    #cityName {
        font-size: 24px;
    }
}

@media (min-width: 1024px) {
    .mainContainer {
        width: 400px;
        margin-top: 20px;
        margin-bottom: 20px;
        height: 700px;
    }

    .weather-details {
        font-size: 22px;
    }

    .widgets {
        font-size: 18px;
        margin-top: -10px;
    }

    .city-input {
        font-size: 18px;
    }
} */


.mbtn {
    position: absolute;
    right: 0;
    bottom: 0;
    height: 100%;
    background-color: transparent;
    backdrop-filter: blur(5px);
    border: none;
    border-radius: 10px;
    cursor: pointer;
    min-width: 20px;
}


.media-scroller {
    display: grid;
    grid-auto-flow: column;
    /* For every element it creates a new column */
    grid-auto-columns: 30%;
    /* States how wide each column is gonna be */
    gap: var(--size-3);
    overflow-x: auto;
    overscroll-behavior-inline: contain;
    /* mkaing sure that the scrolling only affects the scroll elements and not potential the whole page */
    opacity: 0;
    width: 0;
    transition: opacity 1s ease, width 1s ease;
    overflow: hidden;
    margin-top: 20px;
    position: relative;
    z-index: 0;
    overflow-x: auto;
    scrollbar-width: none;
    -ms-overflow-style: none;
}

.media-scroller::-webkit-scrollbar {
    display: none;
}

.mainContainer.expanded {
    width: 850px;
    /* or however wide it needs to fit widgets + forecast */
}


.widgets-wrapper {
    display: flex;
    align-items: flex-start;
    gap: 20px;
    /* space between widgets and media-scroller */
}



.mediaElement {
    padding: var(--size-3);
    background: var(--surface-2);
    border-radius: 10px;
    display: grid;
    gap: var(--size-3);
    grid-template-rows: min-content;
    background: rgba(255, 255, 255, 0.1);
    border: none;

}

.mediaElement>img {
    inline-size: 30%;
}

.snaps-inline {
    scroll-snap-type: inline mandatory;
    scroll-padding-inline: var(--size-2);
}

.snaps-inline>* {
    scroll-snap-align: start; /* It ensures that teh media elements align with the beginning of the scroll bar */
}

.mainContainer.expanded .media-scroller {
    width: 480px;
    opacity: 1;
    overflow-x: scroll;
}